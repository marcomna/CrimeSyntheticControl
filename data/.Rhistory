largas = mean(`Largas`, na.rm = T)) %>%
###########
generate_predictor(time_window = as.Date("2017-01-01"),
canjes1 = Total) %>%
generate_predictor(time_window = as.Date("2017-03-01"),
canjes3 = Total) %>%
generate_predictor(time_window = as.Date("2017-05-01"),
canjes5 = Total) %>%
generate_predictor(time_window = as.Date("2017-07-01"),
canjes7 = Total) %>%
generate_predictor(time_window = as.Date("2017-09-01"),
canjes9 = Total) %>%
generate_predictor(time_window = as.Date("2017-11-01"),
canjes11 = Total) %>%
generate_predictor(time_window = as.Date("2018-01-01"),
canjes13 = Total) %>%
generate_predictor(time_window = as.Date("2018-03-01"),
canjes15 = Total) %>%
generate_predictor(time_window = as.Date("2018-05-01"),
canjes17 = Total) %>%
generate_predictor(time_window = as.Date("2018-07-01"),
canjes19 = Total) %>%
generate_predictor(time_window = as.Date("2018-09-01"),
canjes21 = Total) %>%
generate_predictor(time_window = as.Date("2018-11-01"),
canjes23 = Total) #%>%
CScanjes <-
canjesCS %>%
# initial the synthetic control object
synthetic_control(outcome = Total, # outcome
unit = Entidad, # unit index in the panel data
time = Fecha, # time index in the panel data
i_unit = "Ciudad de México", # unit where the intervention occurred
i_time = as.Date("2019-01-01"), # time period when the intervention occurred
generate_placebos=T # generate placebo synthetic controls (for inference)
) %>%
# predictores
generate_predictor(time_window = as.Date("2017-01-01"):as.Date("2018-11-01"),
cortas = mean(`Cortas`, na.rm = T),
largas = mean(`Largas`, na.rm = T)) %>%
###########
generate_predictor(time_window = as.Date("2017-01-01"),
canjes1 = Total) %>%
generate_predictor(time_window = as.Date("2017-03-01"),
canjes3 = Total) %>%
generate_predictor(time_window = as.Date("2017-05-01"),
canjes5 = Total) %>%
generate_predictor(time_window = as.Date("2017-07-01"),
canjes7 = Total) %>%
generate_predictor(time_window = as.Date("2017-09-01"),
canjes9 = Total) %>%
generate_predictor(time_window = as.Date("2017-11-01"),
canjes11 = Total) %>%
generate_predictor(time_window = as.Date("2018-01-01"),
canjes13 = Total) %>%
generate_predictor(time_window = as.Date("2018-03-01"),
canjes15 = Total) %>%
generate_predictor(time_window = as.Date("2018-05-01"),
canjes17 = Total) %>%
generate_predictor(time_window = as.Date("2018-07-01"),
canjes19 = Total) %>%
generate_predictor(time_window = as.Date("2018-09-01"),
canjes21 = Total) %>%
generate_predictor(time_window = as.Date("2018-11-01"),
canjes23 = Total) %>%
# Generate the fitted weights for the synthetic control
generate_weights(optimization_window = as.Date("2017-01-01"):as.Date("2018-12-01"), # time to use in the optimization task
margin_ipop = 0.02,sigf_ipop = 7,bound_ipop = 5 # optimizer options
) %>%
# Generate the synthetic control
generate_control()
CScanjes <-
canjesCS %>%
# initial the synthetic control object
synthetic_control(outcome = Total, # outcome
unit = Entidad, # unit index in the panel data
time = Fecha, # time index in the panel data
i_unit = "Ciudad de México", # unit where the intervention occurred
i_time = as.Date("2019-01-01"), # time period when the intervention occurred
generate_placebos=T # generate placebo synthetic controls (for inference)
) %>%
# predictores
# generate_predictor(time_window = as.Date("2017-01-01"):as.Date("2018-11-01"),
#                   cortas = mean(`Cortas`, na.rm = T),
#                  largas = mean(`Largas`, na.rm = T)) %>%
###########
generate_predictor(time_window = as.Date("2017-01-01"),
canjes1 = Total) %>%
generate_predictor(time_window = as.Date("2017-03-01"),
canjes3 = Total) %>%
generate_predictor(time_window = as.Date("2017-05-01"),
canjes5 = Total) %>%
generate_predictor(time_window = as.Date("2017-07-01"),
canjes7 = Total) %>%
generate_predictor(time_window = as.Date("2017-09-01"),
canjes9 = Total) %>%
generate_predictor(time_window = as.Date("2017-11-01"),
canjes11 = Total) %>%
generate_predictor(time_window = as.Date("2018-01-01"),
canjes13 = Total) %>%
generate_predictor(time_window = as.Date("2018-03-01"),
canjes15 = Total) %>%
generate_predictor(time_window = as.Date("2018-05-01"),
canjes17 = Total) %>%
generate_predictor(time_window = as.Date("2018-07-01"),
canjes19 = Total) %>%
generate_predictor(time_window = as.Date("2018-09-01"),
canjes21 = Total) %>%
generate_predictor(time_window = as.Date("2018-11-01"),
canjes23 = Total) %>%
# Generate the fitted weights for the synthetic control
generate_weights(optimization_window = as.Date("2017-01-01"):as.Date("2018-12-01"), # time to use in the optimization task
margin_ipop = 0.02,sigf_ipop = 7,bound_ipop = 5 # optimizer options
) %>%
# Generate the synthetic control
generate_control()
CScanjes <-
canjesCS %>%
# initial the synthetic control object
synthetic_control(outcome = Total, # outcome
unit = Entidad, # unit index in the panel data
time = Fecha, # time index in the panel data
i_unit = "Ciudad de México", # unit where the intervention occurred
i_time = as.Date("2019-01-01"), # time period when the intervention occurred
generate_placebos=T # generate placebo synthetic controls (for inference)
) %>%
# predictores
generate_predictor(time_window = as.Date("2017-01-01"):as.Date("2018-11-01"),
cortas = mean(`Cortas`, na.rm = T),
largas = mean(`Largas`, na.rm = T)) %>%
###########
generate_predictor(time_window = as.Date("2017-01-01"),
canjes1 = Total) %>%
generate_predictor(time_window = as.Date("2017-03-01"),
canjes3 = Total) %>%
generate_predictor(time_window = as.Date("2017-05-01"),
canjes5 = Total) %>%
generate_predictor(time_window = as.Date("2017-07-01"),
canjes7 = Total) %>%
generate_predictor(time_window = as.Date("2017-09-01"),
canjes9 = Total) %>%
generate_predictor(time_window = as.Date("2017-11-01"),
canjes11 = Total) %>%
generate_predictor(time_window = as.Date("2018-01-01"),
canjes13 = Total) %>%
generate_predictor(time_window = as.Date("2018-03-01"),
canjes15 = Total) %>%
generate_predictor(time_window = as.Date("2018-07-01"),
canjes19 = Total) %>%
generate_predictor(time_window = as.Date("2018-09-01"),
canjes21 = Total) %>%
generate_predictor(time_window = as.Date("2018-11-01"),
canjes23 = Total) %>%
# Generate the fitted weights for the synthetic control
generate_weights(optimization_window = as.Date("2017-01-01"):as.Date("2018-12-01"), # time to use in the optimization task
margin_ipop = 0.02,sigf_ipop = 7,bound_ipop = 5 # optimizer options
) %>%
# Generate the synthetic control
generate_control()
CScanjes %>% plot_trends()
CScanjes %>% plot_differences()
CScanjes %>% plot_weights()
CScanjes %>% grab_balance_table()
CScanjes %>% plot_placebos(prune = F)
library(tidyverse)
library(tidysynth)
library(readr)
library(readxl)
library(haven)
library(reshape2)
library(zoo)
library(lubridate)
library(doBy)
library(Synth)
library(ggthemes)
library(viridis)
library(hrbrthemes)
library(ggpubr)
options(scipen=999)
setwd("~/COLMEX/Tesis/Datos")
##### DATA WRANGLING #####
# Bases de datos
delitos <- read_excel("~/COLMEX/Tesis/Datos/SESNSP.xlsx")
poblacion <- read_excel("~/COLMEX/Tesis/Datos/poblacion.xlsx")
canjes <- read_excel("~/COLMEX/Tesis/Datos/CanjesLimpia.xlsx")
canjesnacional <- canjes %>%
group_by(Fecha) %>%
summarise(Total = sum(Total, na.rm = F))
delitos <- delitos %>%
filter(Año > 2016)
# Nombres entidades
delitos$Entidad[delitos$Entidad == "Coahuila de Zaragoza"] <- "Coahuila"
delitos$Entidad[delitos$Entidad == "Michoacán de Ocampo"] <- "Michoacán"
delitos$Entidad[delitos$Entidad == "Veracruz de Ignacio de la Llave"] <- "Veracruz"
poblacion$Entidad[poblacion$Entidad == "Coahuila de Zaragoza"] <- "Coahuila"
poblacion$Entidad[poblacion$Entidad == "Estado de México"] <- "México"
poblacion$Entidad[poblacion$Entidad == "Michoacán de Ocampo"] <- "Michoacán"
poblacion$Entidad[poblacion$Entidad == "Veracruz de Ignacio de la Llave"] <- "Veracruz"
# Arreglo base delitos y fechas
delitos <- delitos %>%
gather(mes, valor, -c(Año, Clave_Ent, Entidad, `Bien jurídico afectado`, `Tipo de delito`, `Subtipo de delito`, Modalidad))
delitos$mes[delitos$mes == "Enero"] <- 1
delitos$mes[delitos$mes == "Febrero"] <- 2
delitos$mes[delitos$mes == "Marzo"] <- 3
delitos$mes[delitos$mes == "Abril"] <- 4
delitos$mes[delitos$mes == "Mayo"] <- 5
delitos$mes[delitos$mes == "Junio"] <- 6
delitos$mes[delitos$mes == "Julio"] <- 7
delitos$mes[delitos$mes == "Agosto"] <- 8
delitos$mes[delitos$mes == "Septiembre"] <- 9
delitos$mes[delitos$mes == "Octubre"] <- 10
delitos$mes[delitos$mes == "Noviembre"] <- 11
delitos$mes[delitos$mes == "Diciembre"] <- 12
delitos$Fecha <- as.yearmon(paste(delitos$Año, delitos$mes), "%Y %m")
delitos$Fecha <- format(delitos$Fecha,
"%m-%Y")
delitos$Fecha <- my(delitos$Fecha)
delitos1 <- delitos
# Arreglo para CS
###########################################
delitos <- delitos %>%
group_by(Fecha, Entidad, Modalidad) %>%
summarise(Total = sum(valor, na.rm = TRUE))
delitos <- dcast(delitos, Fecha + Entidad ~ Modalidad)
delitos[,62] <- rowSums(delitos[,c(3:61)])
delitos <- delitos[,c(1,2,62, 3:61)]
names(delitos)[names(delitos) == 'V62'] <- 'TotalDelitos'
names(delitos)[names(delitos) == 'Con arma de fuego'] <- 'armas'
delitos <- delitos %>%
filter(Fecha < as.Date("2021-12-01"))
delitos <- full_join(x = delitos, y = poblacion, by = "Entidad")
delitos <- delitos[,c(1:2, 63,3:62)]
# Tasas de delitos
delitos[,4:63] <- delitos[,4:63]*100000/delitos$Poblacion2020
#####################################################
delitosCS <- delitos
##### COMPORTAMIENTO OTROS DELITOS #####
delitos1 <- delitos1 %>%
group_by(Fecha, Entidad, `Tipo de delito`) %>%
summarize(sumatotal = sum(valor))
delitos1$incidencia <- delitos1$sumatotal*100000/9209944
paleta1 <- c("#052F5F", "#005377", "#06A77D", "#D5C67A", "#F1A208", "#8D94BA", "#9A7AA0", "#A63D40")
p1 <- delitos1 %>%
filter(Entidad == "Ciudad de México" & `Tipo de delito` %in% c("Abuso de confianza", "Daño a la propiedad", "Amenazas", "Fraude", "Violencia familiar", "
Delitos cometidos por servidores públicos", "Despojo", "Falsificación", "Narcomenudeo")) %>%
ggplot(aes(Fecha, incidencia, col = `Tipo de delito`)) +
geom_line(size = 1.2) +
labs(title="",
x = "Fecha", y = "Incidencia delictiva")+
geom_vline(xintercept= as.Date("2019-01-01"), linetype = "dashed")+
scale_x_date(date_breaks = "6 months" , date_labels = "%b-%y") +
theme(plot.title = element_text(hjust = 0.5, size = 12,face="bold"), axis.title=element_text(size=10,face="bold"))+
theme_hc() +
scale_colour_manual(values=paleta1)
p2 <- delitos1 %>%
filter(Entidad == "Ciudad de México" & `Tipo de delito` %in% c("Abuso sexual", "Acoso sexual", "Allanamiento de morada",
"Extorsión", "Delitos cometidos por servidores públicos",
"Falsedad", "Violación simple", "Otros delitos del Fuero Común")) %>%
ggplot(aes(Fecha, incidencia, col = `Tipo de delito`)) +
geom_line(size = 1.2) +
labs(title="",
x = "Fecha", y = "Incidencia delictiva")+
geom_vline(xintercept= as.Date("2019-01-01"), linetype = "dashed")+
scale_x_date(date_breaks = "6 months" , date_labels = "%b-%y") +
theme(plot.title = element_text(hjust = 0.5, size = 12,face="bold"), axis.title=element_text(size=10,face="bold"))+
theme_hc() +
scale_colour_manual(values=paleta1)
p3 <- ggarrange(p1, p2,
labels = c("", ""),
ncol = 2, nrow = 1)
annotate_figure(p3, top = text_grob("Incidencia delictiva en la Ciudad de México por cada 100 000 habitantes",
color = "black", face = "bold", size = 18))
##### DELITOS CON ARMAS DE FUEGO EN OTRAS ENTIDADES #####
delitos$Fecha <- as.Date(delitos$Fecha)
class(delitos$Fecha)
delitos %>%
filter(Entidad %in% c("Ciudad de México", "México", "Chiapas", "Chihuahua", "Coahuila", "Guanajuato",
"Jalisco", "Querétaro", "Sinaloa", "Tamaulipas", "Tlaxcala", "Zacatecas")) %>%
ggplot(aes(Fecha, armas, col = Entidad)) +
geom_line(size = 1.2) +
labs(title="",
x = "Fecha", y = "Incidencia delictiva")+
scale_x_date(date_breaks = "6 months" , date_labels = "%b-%y") +
geom_vline(xintercept= as.Date("2019-01-01"), linetype = "dashed")+
scale_color_brewer(palette="Paired") +
theme(plot.title = element_text(hjust = 0.5, size = 12,face="bold"), axis.title=element_text(size=10,face="bold"))+
theme_hc()
##### CANJES DE ARMAS POR ENTIDAD #####
delitos <- left_join(delitos, canjes)
delitos <- delitos[,c(1:3, 64:66,4:63)]
names(delitos)[names(delitos) == 'Total'] <- 'TotalCanjes'
names(delitos)[names(delitos) == 'Cortas'] <- 'CanjesCortas'
names(delitos)[names(delitos) == 'Largas'] <- 'CanjesLargas'
delitos <- left_join(delitos, canjesnacional)
delitos <- delitos[,c(1:6, 67, 7:66)]
names(delitos)[names(delitos) == 'Total'] <- 'TotalCanjesNacional'
delitos[is.na(delitos)] <- 0
proporcioncanjes <- delitos %>%
group_by(Fecha, Entidad) %>%
summarise(n = sum(TotalCanjes)) %>%
mutate(ProporcionCanjes = n / sum(n))
# Gráficas
# En relación al total
proporcioncanjes$Fecha <- as.Date(proporcioncanjes$Fecha)
proporcioncanjes %>%
filter(Entidad == "Ciudad de México") %>%
ggplot(aes(x=Fecha, y=ProporcionCanjes, fill=Entidad)) +
geom_area(fill = "#A08040", color = "black") +
labs(title="Proporción de armas canjeadas en la CDMX en relación con el total nacional",
x = "Fecha", y = "Proporción del total")+
scale_x_date(date_breaks = "3 months" , date_labels = "%m/%Y") +
geom_vline(xintercept= as.Date("2019-01-01"), linetype = "dashed", size = 1.2)+
scale_color_brewer(palette="Paired") +
guides(fill="none") +
theme_fivethirtyeight() +
theme(plot.title = element_text(hjust = 0.5, size = 16,face="bold", color = "black"),
axis.title=element_text(size=12,face="bold"), axis.text.x = element_text(angle = 65, hjust =1))
# Stacked area
proporcioncanjes %>%
filter(Entidad %in% c("Ciudad de México", "Coahuila", "Guanajuato", "Chiapas",
"Tamaulipas", "Jalisco", "Chihuahua", "Zacatecas",
"Sinaloa", "Tlaxcala", "Querétaro", "México")) %>%
ggplot(aes(x=Fecha, y=ProporcionCanjes, fill=Entidad)) +
geom_area(alpha=0.6 , size=0.5, colour="black") +
scale_fill_viridis(discrete = T)
proporcioncanjes %>%
ggplot(aes(x=Fecha, y=ProporcionCanjes, fill=Entidad)) +
geom_area(alpha=0.6 , size=0.5, colour="black") +
scale_fill_viridis(discrete = T) +
theme_ipsum()
# Barras
proporcioncanjes %>%
filter(Entidad %in% c("Ciudad de México", "Coahuila", "Guanajuato", "Chiapas",
"Tamaulipas", "Jalisco", "Chihuahua", "Zacatecas",
"Sinaloa", "Tlaxcala", "Querétaro", "México")) %>%
ggplot(aes(x=Fecha, y=ProporcionCanjes, fill=Entidad)) +
geom_bar(stat = "identity")
proporcioncanjes %>%
ggplot(aes(x=Fecha, y=ProporcionCanjes, fill=Entidad)) +
geom_bar(stat = "identity")
proporcioncanjes$Año <- format(as.Date(proporcioncanjes$Fecha, format="%Y-%m-%d"),"%Y")
canjesanual <- summaryBy(n ~ Año + Entidad, data = proporcioncanjes, FUN = sum)
canjesanual <- canjesanual %>%
group_by(Año, Entidad) %>%
summarise(n = sum(n.sum)) %>%
mutate(ProporcionCanjes = n / sum(n))
canjesanual %>%
ggplot(aes(x=Año, y=ProporcionCanjes, fill=Entidad)) +
geom_bar(stat = "identity")
#### CONTROL SINTÉTICO #####
CSdelitos <-
delitosCS %>%
# initial the synthetic control object
synthetic_control(outcome = armas, # outcome
unit = Entidad, # unit index in the panel data
time = Fecha, # time index in the panel data
i_unit = "Ciudad de México", # unit where the intervention occurred
i_time = as.Date("2019-01-01"), # time period when the intervention occurred
generate_placebos=T # generate placebo synthetic controls (for inference)
) %>%
# predictores
generate_predictor(time_window = as.Date("2017-01-01"):as.Date("2018-11-01"),
total = mean(`TotalDelitos`, na.rm = T),
conviolencia = mean(`Con violencia`, na.rm = T),
coches = mean(`Robo de coche de 4 ruedas Con violencia`, na.rm = T),
motos = mean(`Robo de motocicleta Con violencia`, na.rm = T),
rehen = mean(`Secuestro con calidad de rehén`, na.rm = T),
expres = mean(`Secuestro exprés`, na.rm = T),
extorsivo = mean(`Secuestro extorsivo`, na.rm = T),
daño = mean(`Secuestro para causar daño`, na.rm = T)) %>%
###########
generate_predictor(time_window = as.Date("2017-01-01"),
hom25 = armas) %>%
generate_predictor(time_window = as.Date("2017-03-01"),
hom27 = armas) %>%
generate_predictor(time_window = as.Date("2017-05-01"),
hom29 = armas) %>%
generate_predictor(time_window = as.Date("2017-07-01"),
hom31 = armas) %>%
generate_predictor(time_window = as.Date("2017-09-01"),
hom33 = armas) %>%
generate_predictor(time_window = as.Date("2017-11-01"),
hom35 = armas) %>%
generate_predictor(time_window = as.Date("2018-01-01"),
hom37 = armas) %>%
generate_predictor(time_window = as.Date("2018-03-01"),
hom39 = armas) %>%
generate_predictor(time_window = as.Date("2018-05-01"),
hom41 = armas) %>%
generate_predictor(time_window = as.Date("2018-07-01"),
hom43 = armas) %>%
generate_predictor(time_window = as.Date("2018-09-01"),
hom45 = armas) %>%
generate_predictor(time_window = as.Date("2018-11-01"),
hom47 = armas) %>%
# Generate the fitted weights for the synthetic control
generate_weights(optimization_window = as.Date("2017-01-01"):as.Date("2018-12-01"), # time to use in the optimization task
margin_ipop = 0.02,sigf_ipop = 7,bound_ipop = 5 # optimizer options
) %>%
# Generate the synthetic control
generate_control()
graficaCS1 <- unnest(
CSdelitos , cols = c('.synthetic_control')) %>%
filter(.id == "Ciudad de México" & .type == "treated") %>%
select(time_unit, real_y, synth_y) %>%
mutate(diff = real_y-synth_y)
p5 <- graficaCS1 %>%
ggplot() +
geom_line(aes(time_unit, real_y), size = 1.3, color = "#900020") +
geom_line(aes(time_unit, synth_y), size = 1.3, color = "#44944A") +
theme_fivethirtyeight() +
labs(title="",
x = "", y = "Incidencia delictiva")+
theme(plot.title = element_text(hjust = 0.5, size = 12,face="bold"),
axis.title=element_text(size=12,face="bold"),
axis.text.x = element_blank())+
scale_x_date(date_breaks = "3 months" , date_labels = "%m/%Y") +
geom_vline(xintercept= as.Date("2019-01-01"), linetype = "dashed", size = 1.2)+
annotate("text", x=as.Date("2020-05-01"), y=2.1, label= "Observada", size = 5, fontface = "bold", color = "#900020") +
annotate("text", x=as.Date("2020-05-01"), y=3.1, label= "Sintética", size =5,fontface = "bold", color = "#44944A") +
scale_y_continuous(limits = c(1, 3.7), breaks = seq(0, 3.7, by = 0.5))
p6 <- graficaCS1 %>%
ggplot() +
geom_line(aes(time_unit, diff), size = 1.3, color = "#A08040") +
theme_fivethirtyeight() +
labs(title="",
x = "Fecha", y = "Diferencia entre unidades")+
theme(plot.title = element_text(hjust = 0.5, size = 12,face="bold"),
axis.title=element_text(size=12,face="bold"),
axis.text.x = element_text(angle = 65, hjust = 1))+
scale_x_date(date_breaks = "3 months" , date_labels = "%m/%Y") +
geom_vline(xintercept= as.Date("2019-01-01"), linetype = "dashed", size = 1.2)
ggarrange(p5 + rremove("xlab"), p6,
labels = c("Control sintético", "Diferencia entre unidades"), hjust =-0.5,
ncol = 1, nrow = 2)
arrange2 <- ggarrange(p3, p4,nrow = 2, common.legend = TRUE)
annotate_figure(arrange2, top = text_grob("Gráfica 2. Control sintético y diferencia entre unidades observada y sintética.", face = "bold"))
CSdelitos %>% plot_differences()
CSdelitos %>% plot_weights()
CSdelitos %>% grab_balance_table()
CSdelitos %>% plot_placebos(prune = F)
CSdelitos %>% plot_placebos()
CSdelitos %>% plot_mspe_ratio()
CSdelitos %>% grab_signficance()
canjesCS <- left_join(delitosCS, canjes)
canjesCS <- canjesCS %>%
group_by(Entidad) %>%
mutate(id = row_number(Fecha))
canjesCS[is.na(canjesCS)] <- 0
canjesCS <- canjesCS %>%
select(Fecha, Entidad, id, Cortas, Largas, Total)
head(canjesCS)
canjesCS<-canjesCS %>% mutate(Fecha=as.Date(Fecha))
canjesCS<-canjesCS %>% mutate(Entidad=as.factor(Entidad))
CScanjes <-
canjesCS %>%
# initial the synthetic control object
synthetic_control(outcome = Total, # outcome
unit = Entidad, # unit index in the panel data
time = Fecha, # time index in the panel data
i_unit = "Ciudad de México", # unit where the intervention occurred
i_time = as.Date("2019-01-01"), # time period when the intervention occurred
generate_placebos=T # generate placebo synthetic controls (for inference)
) %>%
# predictores
generate_predictor(time_window = as.Date("2017-01-01"):as.Date("2018-11-01"),
cortas = mean(`Cortas`, na.rm = T),
largas = mean(`Largas`, na.rm = T)) %>%
###########
generate_predictor(time_window = as.Date("2017-01-01"),
canjes1 = Total) %>%
generate_predictor(time_window = as.Date("2017-03-01"),
canjes3 = Total) %>%
generate_predictor(time_window = as.Date("2017-05-01"),
canjes5 = Total) %>%
generate_predictor(time_window = as.Date("2017-07-01"),
canjes7 = Total) %>%
generate_predictor(time_window = as.Date("2017-09-01"),
canjes9 = Total) %>%
generate_predictor(time_window = as.Date("2017-11-01"),
canjes11 = Total) %>%
generate_predictor(time_window = as.Date("2018-01-01"),
canjes13 = Total) %>%
generate_predictor(time_window = as.Date("2018-03-01"),
canjes15 = Total) %>%
generate_predictor(time_window = as.Date("2018-07-01"),
canjes19 = Total) %>%
generate_predictor(time_window = as.Date("2018-09-01"),
canjes21 = Total) %>%
generate_predictor(time_window = as.Date("2018-11-01"),
canjes23 = Total) %>%
# Generate the fitted weights for the synthetic control
generate_weights(optimization_window = as.Date("2017-01-01"):as.Date("2018-12-01"), # time to use in the optimization task
margin_ipop = 0.02,sigf_ipop = 7,bound_ipop = 5 # optimizer options
) %>%
# Generate the synthetic control
generate_control()
CScanjes %>% plot_trends()
CScanjes %>% plot_differences()
CScanjes %>% plot_weights()
CScanjes %>% grab_balance_table()
CScanjes %>% plot_placebos(prune = F)
CScanjes %>% plot_placebos()
CScanjes %>% plot_mspe_ratio()
CScanjes %>% grab_signficance()
CScanjes %>% plot_trends()
CScanjes %>% plot_differences()
CScanjes %>% plot_weights()
CScanjes %>% grab_balance_table()
CScanjes %>% plot_placebos(prune = F)
CScanjes %>% plot_placebos()
CScanjes %>% plot_mspe_ratio()
